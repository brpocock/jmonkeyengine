/*
 * Copyright (c) 2009-2010 jMonkeyEngine
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 * * Redistributions of source code must retain the above copyright
 *   notice, this list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright
 *   notice, this list of conditions and the following disclaimer in the
 *   documentation and/or other materials provided with the distribution.
 *
 * * Neither the name of 'jMonkeyEngine' nor the names of its contributors
 *   may be used to endorse or promote products derived from this software
 *   without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package com.jme3.gde.ogrexml.importer.panels;

import java.io.File;
import java.util.prefs.Preferences;
import org.openide.awt.StatusDisplayer;
import org.openide.filesystems.FileChooserBuilder;
import org.openide.filesystems.FileObject;
import org.openide.filesystems.FileUtil;
import org.openide.util.Utilities;

/**
 *
 * @author normenhansen
 */
public class ImportOgreXMLDialog extends javax.swing.JDialog {
    private FileObject modelPath;
    private FileObject materialPath;

    /** Creates new form ImportOgreXMLDialog */
    public ImportOgreXMLDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    private File getUserFile(String title, String button) {
        //use AWT FileDialog on mac, creates native file window with apple java
        //TODO: maybe move to some helper class
        if(Utilities.isMac()){
            try{
                Preferences prefs=Preferences.userNodeForPackage(ImportOgreXMLDialog.class);
                java.awt.FileDialog dialog=new java.awt.FileDialog(this,title);
                dialog.setDirectory(prefs.get("PATH",""));
                dialog.setMode(dialog.LOAD);
                dialog.setVisible(true);
                if(dialog.getFile()==null) return null;
                prefs.put("PATH", dialog.getDirectory());
                String projectPath=dialog.getDirectory()+dialog.getFile();
                File loadFile=new File(projectPath);
                prefs.flush();
                return loadFile;//.toURL();
            }
            catch(Exception e){
                return null;
            }
        }
        else{
            return new FileChooserBuilder(ImportOgreXMLDialog.class).setTitle(title).setApproveText(button).showOpenDialog();
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        modelPathLabel = new javax.swing.JLabel();
        modelPathTextField = new javax.swing.JTextField();
        findModelButton = new javax.swing.JButton();
        materialPathTextField = new javax.swing.JTextField();
        findMaterialButton = new javax.swing.JButton();
        materialPathLabel = new javax.swing.JLabel();
        cancelButton = new javax.swing.JButton();
        importButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        modelPathLabel.setText(org.openide.util.NbBundle.getMessage(ImportOgreXMLDialog.class, "ImportOgreXMLDialog.modelPathLabel.text")); // NOI18N

        modelPathTextField.setText(org.openide.util.NbBundle.getMessage(ImportOgreXMLDialog.class, "ImportOgreXMLDialog.modelPathTextField.text")); // NOI18N

        findModelButton.setText(org.openide.util.NbBundle.getMessage(ImportOgreXMLDialog.class, "ImportOgreXMLDialog.findModelButton.text")); // NOI18N
        findModelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findModelButtonActionPerformed(evt);
            }
        });

        materialPathTextField.setText(org.openide.util.NbBundle.getMessage(ImportOgreXMLDialog.class, "ImportOgreXMLDialog.materialPathTextField.text")); // NOI18N

        findMaterialButton.setText(org.openide.util.NbBundle.getMessage(ImportOgreXMLDialog.class, "ImportOgreXMLDialog.findMaterialButton.text")); // NOI18N
        findMaterialButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findMaterialButtonActionPerformed(evt);
            }
        });

        materialPathLabel.setText(org.openide.util.NbBundle.getMessage(ImportOgreXMLDialog.class, "ImportOgreXMLDialog.materialPathLabel.text")); // NOI18N

        cancelButton.setText(org.openide.util.NbBundle.getMessage(ImportOgreXMLDialog.class, "ImportOgreXMLDialog.cancelButton.text")); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        importButton.setText(org.openide.util.NbBundle.getMessage(ImportOgreXMLDialog.class, "ImportOgreXMLDialog.importButton.text")); // NOI18N
        importButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(modelPathLabel)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(modelPathTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(findModelButton))
                    .add(materialPathLabel)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(materialPathTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(findMaterialButton))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(cancelButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(importButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(modelPathLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(modelPathTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(findModelButton))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(materialPathLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(materialPathTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(findMaterialButton))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 7, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(importButton)
                    .add(cancelButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void findModelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findModelButtonActionPerformed
        File file=getUserFile("Select OgreXML file","load");
        if(file==null) return;
        modelPath=FileUtil.toFileObject(file);
        modelPathTextField.setText(modelPath.getPath());
        File material=new File(modelPath.getParent().getPath()+File.separator+modelPath.getName()+".material");
        StatusDisplayer.getDefault().setStatusText("tried path "+material.getPath()+" for material");
        if(material.exists()){
            materialPath=FileUtil.toFileObject(material);
            materialPathTextField.setText(materialPath.getPath());
        }

    }//GEN-LAST:event_findModelButtonActionPerformed

    private void findMaterialButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findMaterialButtonActionPerformed
        File file=getUserFile("Select Ogre Material file", "load");
        if(file==null) return;
        materialPath=FileUtil.toFileObject(file);
        materialPathTextField.setText(materialPath.getPath());
    }//GEN-LAST:event_findMaterialButtonActionPerformed

    private void importButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importButtonActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_importButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        modelPath=null;
        materialPath=null;
        this.setVisible(false);
    }//GEN-LAST:event_cancelButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton findMaterialButton;
    private javax.swing.JButton findModelButton;
    private javax.swing.JButton importButton;
    private javax.swing.JLabel materialPathLabel;
    private javax.swing.JTextField materialPathTextField;
    private javax.swing.JLabel modelPathLabel;
    private javax.swing.JTextField modelPathTextField;
    // End of variables declaration//GEN-END:variables

    public FileObject getModelPath() {
        return modelPath;
    }

    public FileObject getMaterialPath() {
        return materialPath;
    }

}
