<?xml version="1.0" encoding="UTF-8"?>
<!-- You may freely edit this file. See harness/README in the NetBeans platform -->
<!-- for some information on what you could do (e.g. targets to override). -->
<!-- If you delete this file and reopen the project it will be recreated. -->
<project name="jme-gde" basedir=".">
    <description>Builds the module suite jme-gde.</description>
    <import file="nbproject/build-impl.xml"/>
    <!--TODO: using the evil for loop from ant-contrib for loops and if, change that..-->
    <taskdef resource="net/sf/antcontrib/antcontrib.properties">
      <classpath>
        <pathelement location="ant-lib/ant-contrib.jar"/>
      </classpath>
    </taskdef>

    <target name="dist-gde" depends="suite.clean, zip-templates, -set-impl-version, suite.nbms, unset-impl-version">
    </target>

    <target name="build-mac" depends="-copy-mac-icon" description="Build Mac OS X Application">
    </target>

    <!--zips up the templates and adds them to the template project-->
    <target name="zip-templates" description="Updates the template zip files">
        <zip basedir="BasicGameTemplate/" destfile="jme3-templates/src/com/jme3/gde/templates/BasicGameProject.zip">
            <exclude name="**/build/"/>
            <exclude name="**/dist/"/>
            <exclude name="**/nbproject/private/"/>
        </zip>
        <zip basedir="JME3TestsTemplate/" destfile="jme3-tests-template/src/com/jme3/gde/templates/tests/JmeTestsProject.zip">
            <exclude name="**/build/"/>
            <exclude name="**/dist/"/>
            <exclude name="**/nbproject/private/"/>
        </zip>
    </target>

    <target name="-set-impl-version" depends="-jme3-svn-properties">
        <property file="nbproject/project.properties"/>
        <foreach target="-do-set-impl-version" list="${modules}" delimiter=":" param="module_dir"/>
    </target>

    <target name="unset-impl-version" depends="-jme3-svn-properties">
        <property file="nbproject/project.properties"/>
        <foreach target="-do-unset-impl-version" list="${modules}" delimiter=":" param="module_dir"/>
    </target>

    <target name="-do-set-impl-version">
       <!--load correct svn properties for project-->
       <if>
          <or>
              <equals arg1="${module_dir}" arg2="jme3-core-libraries"/>
              <equals arg1="${module_dir}" arg2="jme3-project-libraries"/>
          </or>
          <then>
            <!--set jme3 svn revision for these projects-->
            <property prefix="svn" file="build/jme3-lib-svn.properties"/>
          </then>
          <else>
              <if>
                  <or>
                      <equals arg1="${module_dir}" arg2="jme3-core-baselibs"/>
                      <equals arg1="${module_dir}" arg2="jme3-project-baselibs"/>
                      <equals arg1="${module_dir}" arg2="jme3-tests-template"/>
                  </or>
                  <then>
                    <!--set jme3-testdata svn revision for this project-->
                    <property prefix="svn" file="build/jme3-svn.properties"/>
                  </then>
                  <else>
                      <if>
                          <equals arg1="${module_dir}" arg2="jme3-project-testdata"/>
                          <then>
                            <!--set jme3-testdata svn revision for this project-->
                            <property prefix="svn" file="build/jme3-testdata-svn.properties"/>
                          </then>
                          <else>
                              <!--load and set svn revision of this projects folder for this project-->
                              <exec executable="svn" output="build/${module_dir}-svn.properties" dir="${module_dir}">
                                <arg value="info" />
                              </exec>
                              <replace file="build/${module_dir}-svn.properties" token="Last Changed Rev" value="Lastchange"/>
                              <property prefix="svn" file="build/${module_dir}-svn.properties"/>
                          </else>
                      </if>
                  </else>
              </if>
          </else>
      </if>

      <echo>Setting implementation version for ${module_dir} to revision: ${svn.Lastchange}</echo>
      <replace dir="${module_dir}" token="OpenIDE-Module-Implementation-Version: 0" value="OpenIDE-Module-Implementation-Version: ${svn.Lastchange}">
        <include name="**/*.mf"/>
      </replace>
    </target>

    <target name="-do-unset-impl-version">
      <!--load correct svn properties for project-->
      <if>
          <or>
              <equals arg1="${module_dir}" arg2="jme3-core-libraries"/>
              <equals arg1="${module_dir}" arg2="jme3-project-libraries"/>
          </or>
          <then>
            <!--set jme3 svn revision for these projects-->
            <property prefix="svn" file="build/jme3-lib-svn.properties"/>
          </then>
          <else>
              <if>
                  <or>
                      <equals arg1="${module_dir}" arg2="jme3-core-baselibs"/>
                      <equals arg1="${module_dir}" arg2="jme3-project-baselibs"/>
                      <equals arg1="${module_dir}" arg2="jme3-tests-template"/>
                  </or>
                  <then>
                    <!--set jme3-testdata svn revision for this project-->
                    <property prefix="svn" file="build/jme3-svn.properties"/>
                  </then>
                  <else>
                      <if>
                          <equals arg1="${module_dir}" arg2="jme3-project-testdata"/>
                          <then>
                            <!--set jme3-testdata svn revision for this project-->
                            <property prefix="svn" file="build/jme3-testdata-svn.properties"/>
                          </then>
                          <else>
                              <!--load and set svn revision of this projects folder for this project-->
                              <exec executable="svn" output="build/${module_dir}-svn.properties" dir="${module_dir}">
                                <arg value="info" />
                              </exec>
                              <replace file="build/${module_dir}-svn.properties" token="Last Changed Rev" value="Lastchange"/>
                              <property prefix="svn" file="build/${module_dir}-svn.properties"/>
                          </else>
                      </if>
                  </else>
              </if>
          </else>
      </if>
      
      <echo>Removing implementation version for ${module_dir} from revision: ${svn.Lastchange}</echo>
      <replace dir="${module_dir}" token="OpenIDE-Module-Implementation-Version: ${svn.Lastchange}" value="OpenIDE-Module-Implementation-Version: 0">
        <include name="**/*.mf"/>
      </replace>

    </target>

    <target name="-jme3-svn-properties">
      <mkdir dir="build"/>
      <!--jme3 svn properties-->
      <exec executable="svn" dir="../jme3/" output="build/jme3-svn.properties">
        <arg value="info" />
      </exec>
      <replace file="build/jme3-svn.properties" token="Last Changed Rev" value="Lastchange"/>
      <!--jme3 test data svn properties-->
      <exec executable="svn" dir="../jme3/src/test-data/" output="build/jme3-testdata-svn.properties">
        <arg value="info" />
      </exec>
      <replace file="build/jme3-testdata-svn.properties" token="Last Changed Rev" value="Lastchange"/>
      <!--jme3 libraries svn properties-->
      <exec executable="svn" dir="../jme3/lib/" output="build/jme3-lib-svn.properties">
        <arg value="info" />
      </exec>
      <replace file="build/jme3-lib-svn.properties" token="Last Changed Rev" value="Lastchange"/>
    </target>

    <target name="-copy-mac-icon">
        <echo>Copy mac icon..</echo>
        <property name="nbdist-contents.dir" value="${dist.dir}/${app.name}.app/Contents"/>
        <property name="nbdist-resources.dir" value="${nbdist-contents.dir}/Resources"/>
        <!-- Replace the icns file. -->
        <delete file="${nbdist-resources.dir}/${app.name}.icns"/>
        <copy tofile="${nbdist-resources.dir}/${app.name}.icns" file="${app.name}.icns" />
    </target>

</project>
