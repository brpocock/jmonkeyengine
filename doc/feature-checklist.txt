$Id$

* feature
- -----------------------------------------------------------------------------
* Rigorous XML generation (consistent indentation, detection of illegal XML
   keywords, conversion of illegal XML characters where possible).
* Automatic axis-flip from conventional Blender axes to conventional jME axes.
* Write single mesh object, with and without color vertexes and normals
* Write multiple top-level mesh objects
* Writes defaultColor to Meshes if blenderObject.color set (Blender doesn't
   "show" the color, so need scripting or an add-on to set this).
* Write vertex colors
* Write nested mesh objects, preserving the parent/child relationships
* Write trivial color materials
* Write materials with color and other basic settings (reflectivity et. al.)
* Add exporter setting to export all "exportable" items in the current scene,
  instead of the default of exporting the exportable subset of currently-
  selected items.
* Write basic texture map materials
* Write armatures (including without actions or weightings)
* Write armature actions
* Write armature bone weightings
* Support nesting of Objects under armature skins (though, consistenly with
  Blender, these objects will not follow bone movements).
* Support both old-fashioned parenting and modifier for associating skin
  object to armature object.

  Add support for Object RB* game settings.  These would be very useful for
   jME games.  Like, custom Bondary objects, Physics integration, action hooks.
