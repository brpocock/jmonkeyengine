/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DeployOutput.java
 *
 * Created on Jan 9, 2010, 12:27:43 AM
 */

package g3dtools.deploy;

import java.awt.Color;
import java.awt.Component;
import java.awt.Container;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.net.URLConnection;
import java.net.UnknownHostException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Kirill
 */
public class DeployOutput extends javax.swing.JDialog {

    private DeployLobby lobby;
    private AppConfig config;
    private JFileChooser chooser = new JFileChooser();

    /** Creates new form DeployOutput */
    public DeployOutput(DeployLobby lobby, AppConfig config) {
        super(lobby, true);

        this.lobby = lobby;
        this.config = config;

        initComponents();
        setLocationRelativeTo(lobby);

        if (config.isFTPOutput()){
            String[] params = config.getFtpParams();
            txtHost.setText(params[0]);
            txtPort.setText(params[1]);
            txtUser.setText(params[2]);
            txtPass.setText(params[3]);
        }else{
            radFile.setSelected(true);
            txtPath.setText(config.getOutputPath());
        }

        updateRadioSelection();
    }

    private void enableContainer(Container container, boolean enable){
        container.setEnabled(enable);
        for (int i = 0; i < container.getComponentCount(); i++){
            Component c = container.getComponent(i);
            if (c instanceof Container){
                enableContainer( (Container) c, enable);
            }else{
                c.setEnabled(enable);
            }
        }
    }

    private void updateRadioSelection(){
        if (radFtp.isSelected()){
            enableContainer(pnlFtp, true);
            enableContainer(pnlFS,  false);
        }else if (radFile.isSelected()){
            enableContainer(pnlFtp, false);
            enableContainer(pnlFS,  true);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grp = new javax.swing.ButtonGroup();
        pnlMethod = new javax.swing.JPanel();
        radFtp = new javax.swing.JRadioButton();
        radFile = new javax.swing.JRadioButton();
        pnlFtp = new javax.swing.JPanel();
        lblUser = new javax.swing.JLabel();
        lblPass = new javax.swing.JLabel();
        lblHost = new javax.swing.JLabel();
        lblPort = new javax.swing.JLabel();
        txtHost = new javax.swing.JTextField();
        txtPort = new javax.swing.JTextField();
        txtPass = new javax.swing.JTextField();
        txtUser = new javax.swing.JTextField();
        btnTest = new javax.swing.JButton();
        pnlFS = new javax.swing.JPanel();
        lblPath = new javax.swing.JLabel();
        txtPath = new javax.swing.JTextField();
        btnBrowse = new javax.swing.JButton();
        btnPrev = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        pnlMethod.setBorder(javax.swing.BorderFactory.createTitledBorder("Select deployment method"));

        grp.add(radFtp);
        radFtp.setSelected(true);
        radFtp.setText("FTP Server");
        radFtp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radFtpActionPerformed(evt);
            }
        });

        grp.add(radFile);
        radFile.setText("Filesystem");
        radFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radFileActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout pnlMethodLayout = new org.jdesktop.layout.GroupLayout(pnlMethod);
        pnlMethod.setLayout(pnlMethodLayout);
        pnlMethodLayout.setHorizontalGroup(
            pnlMethodLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlMethodLayout.createSequentialGroup()
                .addContainerGap()
                .add(pnlMethodLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(radFtp)
                    .add(radFile))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        pnlMethodLayout.setVerticalGroup(
            pnlMethodLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlMethodLayout.createSequentialGroup()
                .add(radFtp)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(radFile)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlFtp.setBorder(javax.swing.BorderFactory.createTitledBorder("FTP Server Configuration"));

        lblUser.setText("Username: ");

        lblPass.setText("Password: ");

        lblHost.setText("Host: ");

        lblPort.setText("Port: ");

        txtPort.setText("21");

        btnTest.setText("Test Connection");
        btnTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTestActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout pnlFtpLayout = new org.jdesktop.layout.GroupLayout(pnlFtp);
        pnlFtp.setLayout(pnlFtpLayout);
        pnlFtpLayout.setHorizontalGroup(
            pnlFtpLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlFtpLayout.createSequentialGroup()
                .addContainerGap()
                .add(pnlFtpLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(pnlFtpLayout.createSequentialGroup()
                        .add(lblPass)
                        .add(6, 6, 6)
                        .add(txtPass, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE))
                    .add(pnlFtpLayout.createSequentialGroup()
                        .add(pnlFtpLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(lblUser)
                            .add(lblPort)
                            .add(lblHost))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(pnlFtpLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(txtHost, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
                            .add(txtPort, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
                            .add(txtUser, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, btnTest))
                .addContainerGap())
        );
        pnlFtpLayout.setVerticalGroup(
            pnlFtpLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlFtpLayout.createSequentialGroup()
                .add(pnlFtpLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblHost)
                    .add(txtHost, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(8, 8, 8)
                .add(pnlFtpLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblPort)
                    .add(txtPort, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pnlFtpLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblUser)
                    .add(txtUser, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(pnlFtpLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblPass)
                    .add(txtPass, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(btnTest)
                .addContainerGap(4, Short.MAX_VALUE))
        );

        pnlFS.setBorder(javax.swing.BorderFactory.createTitledBorder("Filesystem Configuration"));

        lblPath.setText("Path: ");

        btnBrowse.setText("Browse ...");
        btnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout pnlFSLayout = new org.jdesktop.layout.GroupLayout(pnlFS);
        pnlFS.setLayout(pnlFSLayout);
        pnlFSLayout.setHorizontalGroup(
            pnlFSLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlFSLayout.createSequentialGroup()
                .addContainerGap()
                .add(lblPath)
                .add(30, 30, 30)
                .add(txtPath, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(btnBrowse)
                .addContainerGap())
        );
        pnlFSLayout.setVerticalGroup(
            pnlFSLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlFSLayout.createSequentialGroup()
                .add(pnlFSLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblPath)
                    .add(txtPath, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(btnBrowse))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnPrev.setText("< Prev");
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });

        btnNext.setText("Next >");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(pnlFS, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(pnlFtp, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(pnlMethod, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(btnPrev)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btnNext)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(pnlMethod, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pnlFtp, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 165, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(pnlFS, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnNext)
                    .add(btnPrev))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void radFtpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radFtpActionPerformed
        updateRadioSelection();
    }//GEN-LAST:event_radFtpActionPerformed

    private void radFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radFileActionPerformed
        updateRadioSelection();
    }//GEN-LAST:event_radFileActionPerformed

    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        
    }//GEN-LAST:event_btnPrevActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        if (radFtp.isSelected()){
            try {
                int port = Integer.parseInt(txtPort.getText());
                // write ftp info
                config.setFtpDeploy(txtHost.getText(), port, txtUser.getText(), txtPass.getText());
            } catch (Throwable ex){
                txtPort.setBackground(Color.RED);
                JOptionPane.showMessageDialog(this, "Error", "Port must be a number!", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }else if (radFile.isSelected()){
            File f = new File(txtPath.getText());
            config.remove("FtpPort");
            config.setOutputPath(f);
        }
        config.save();
        lobby.updateAppList();
        dispose();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseActionPerformed
        chooser.setDialogTitle("Select output directory");
        chooser.setMultiSelectionEnabled(false);
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        if (chooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION){
            File selected = chooser.getSelectedFile();
            if (selected == null)
                return;

            if (!selected.exists()){
                selected.mkdirs();
                selected = selected.getAbsoluteFile();
                txtPath.setText(selected.toString());
            }else if (selected.exists() && selected.isDirectory()){
                selected = selected.getAbsoluteFile();
                txtPath.setText(selected.toString());
            }else{
                // invalid
            }
        }
    }//GEN-LAST:event_btnBrowseActionPerformed

    private void btnTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTestActionPerformed
        StringBuilder sb = new StringBuilder();
        // build url
        sb.append("ftp://");
        sb.append(txtUser.getText());
        sb.append(':');
        sb.append(txtPass.getText());
        sb.append('@');
        sb.append(txtHost.getText());
        sb.append("/");

        URLConnection conn = null;
        boolean succeeded = false;
        try{
            URL url = new URL(sb.toString());
            conn = url.openConnection();
            conn.setDoInput(false);
            conn.setDoOutput(false);
            conn.connect();
            succeeded = true;
            btnTest.setText("Test Connection : OK");
            btnTest.setForeground(Color.BLUE);
        }catch (UnknownHostException ex){
            JOptionPane.showMessageDialog(this, "The host cannot be connected: "+txtHost.getText(), "Error", JOptionPane.ERROR_MESSAGE);
        }catch (IOException ex){
            JOptionPane.showMessageDialog(this, ex.getClass().getSimpleName() + ": "+ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }finally{
            if (conn != null && succeeded){
                try{
                    conn.getInputStream().close();
                } catch (IOException ex){
                    ex.printStackTrace();
                }
            }else if (!succeeded){
                btnTest.setText("Test Connection : Fail");
                btnTest.setForeground(Color.RED);
            }
        }
    }//GEN-LAST:event_btnTestActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBrowse;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrev;
    private javax.swing.JButton btnTest;
    private javax.swing.ButtonGroup grp;
    private javax.swing.JLabel lblHost;
    private javax.swing.JLabel lblPass;
    private javax.swing.JLabel lblPath;
    private javax.swing.JLabel lblPort;
    private javax.swing.JLabel lblUser;
    private javax.swing.JPanel pnlFS;
    private javax.swing.JPanel pnlFtp;
    private javax.swing.JPanel pnlMethod;
    private javax.swing.JRadioButton radFile;
    private javax.swing.JRadioButton radFtp;
    private javax.swing.JTextField txtHost;
    private javax.swing.JTextField txtPass;
    private javax.swing.JTextField txtPath;
    private javax.swing.JTextField txtPort;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables

}
