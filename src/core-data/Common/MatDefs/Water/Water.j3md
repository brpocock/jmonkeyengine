MaterialDef Advanced Water {

    MaterialParameters {
        Int m_NumSamples
        Vector2Array m_SamplePositions;

        Texture2D m_FoamMap
        Texture2D m_NormalMap
        Texture2D m_ReflectionMap
        Texture2D m_HeightMap
        Texture2D m_Texture
        Texture2D m_DepthTexture        
        Vector3 m_CameraPosition
        Float m_Time
        Vector3 frustumCorner
        Matrix4 m_TextureProjMatrix
        Matrix4 m_ViewProjectionMatrixInverse
        Float m_WaterHeight
        Vector3 m_LightDir
        Float m_WaterTransparency
        Float m_NormalScale
        Float m_R0
        Float m_MaxAmplitude
        Color m_LightColor
        Float m_ShoreHardness
        Float m_FoamHardness
        Float m_RefractionStrength
        Float m_WaveScale
        Vector3 m_FoamExistence
        Float m_SunScale
        Vector3 m_ColorExtinction
        Float m_Shininess
        Color m_WaterColor
        Color m_DeepWaterColor
        Vector2 m_WindDirection
        Boolean m_UseRipples
        Boolean m_UseHQShoreline
        Boolean m_UseSpecular
        Boolean m_UseFoam
        Boolean m_UseRefraction
    }

    Technique {
        VertexShader   GLSL150 : Common/MatDefs/Post/Post31.vert
        FragmentShader GLSL150 : Common/MatDefs/Water/Water31.frag

        WorldParameters {
            WorldViewProjectionMatrix
        }

        Defines {
            ENABLE_RIPPLES : m_UseRipples
            ENABLE_HQ_SHORELINE : m_UseHQShoreline
            ENABLE_SPECULAR : m_UseSpecular
            ENABLE_FOAM : m_UseFoam
            ENABLE_REFRACTION : m_UseRefraction
            RESOLVE_MS : m_NumSamples
        }
    }

    Technique {
        VertexShader   GLSL100 : Common/MatDefs/Post/Post.vert
        FragmentShader GLSL130 : Common/MatDefs/Water/water.frag

        WorldParameters {
            WorldViewProjectionMatrix
        }
        Defines {
            ENABLE_RIPPLES : m_UseRipples
            ENABLE_HQ_SHORELINE : m_UseHQShoreline
            ENABLE_SPECULAR : m_UseSpecular
            ENABLE_FOAM : m_UseFoam
            ENABLE_REFRACTION : m_UseRefraction
        }
    }

    Technique FixedFunc {
    }
}