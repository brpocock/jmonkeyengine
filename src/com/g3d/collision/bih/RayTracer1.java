package com.g3d.collision.bih;

import com.g3d.bounding.BoundingBox;
import com.g3d.collision.TrianglePickResults;
import com.g3d.math.Matrix4f;
import com.g3d.math.Plane;
import com.g3d.math.Ray;
import com.g3d.math.Triangle;
import com.g3d.math.Vector2f;
import com.g3d.math.Vector3f;
import com.g3d.renderer.Camera;
import com.g3d.asset.AssetKey;
import com.g3d.asset.AssetManager;
import com.g3d.scene.Mesh;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionListener;
import java.awt.image.BufferedImage;
import javax.swing.JPanel;

public class RayTracer1 extends javax.swing.JFrame {

    BoundingBox bbox = new BoundingBox(new Vector3f(200,200,0), 100,100,100);
    Triangle t = new Triangle();

    public RayTracer1() {
        initComponents();
    }

    private class Tracer extends JPanel implements MouseMotionListener {

        BufferedImage img;
        int x, y;

        public Tracer(){
            super();
            addMouseMotionListener(this);
        }

        private void drawTri(Graphics2D g){
            g.drawLine((int)t.get1().x, (int)t.get1().y,
                       (int)t.get2().x, (int)t.get2().y);
            g.drawLine((int)t.get2().x, (int)t.get2().y,
                       (int)t.get3().x, (int)t.get3().y);
            g.drawLine((int)t.get3().x, (int)t.get3().y,
                       (int)t.get1().x, (int)t.get1().y);
        }

        private void drawSquare(Graphics2D g){
            Vector3f min = bbox.getMin(null);
            Vector3f max = bbox.getMax(null);

            g.drawLine((int)min.x, (int)min.y,
                       (int)min.x, (int)max.y);

            g.drawLine((int)min.x, (int)max.y,
                       (int)max.x, (int)max.y);

            g.drawLine((int)max.x, (int)max.y,
                       (int)max.x, (int)min.y);

            g.drawLine((int)max.x, (int)min.y,
                       (int)min.x, (int)min.y);
        }

        @Override
        public void paint(Graphics g){
            Graphics2D g2d = (Graphics2D) g;
            g2d.clearRect(0, 0, getWidth(), getHeight());

            t.set(0, x,      y,      0);
            t.set(1, x + 60, y - 20, 0);
            t.set(2, x - 20, y + 60, 0);

            if (bbox.intersects(t.get1(), t.get2(), t.get3())){
                g.setColor(Color.red);
            }else{
                g.setColor(Color.black);
            }

            drawTri(g2d);
            drawSquare(g2d);
        }

        public void mouseDragged(MouseEvent e) {
            x = e.getX();
            y = e.getY();
            repaint();
        }

        public void mouseMoved(MouseEvent e) {
            x = e.getX();
            y = e.getY();
            repaint();
        }

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tracer = new Tracer();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BIH Raytracer");
        getContentPane().setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 0, 0));

        tracer.setMinimumSize(new java.awt.Dimension(0, 0));
        tracer.setPreferredSize(new java.awt.Dimension(512, 512));

        org.jdesktop.layout.GroupLayout tracerLayout = new org.jdesktop.layout.GroupLayout(tracer);
        tracer.setLayout(tracerLayout);
        tracerLayout.setHorizontalGroup(
            tracerLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 512, Short.MAX_VALUE)
        );
        tracerLayout.setVerticalGroup(
            tracerLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 512, Short.MAX_VALUE)
        );

        getContentPane().add(tracer);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static void main(String[] args) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RayTracer1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel tracer;
    // End of variables declaration//GEN-END:variables

}
