package jme3tools.deploy;

import java.io.File;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;

public class DeployInputJars extends javax.swing.JDialog {

    private DeployLobby lobby;
    private AppConfig config;
    private DefaultListModel listModel = new DefaultListModel();

    private JFileChooser chooser = new JFileChooser();
    private FileFilter jarZipFilter = new FileFilter() {
        @Override
        public boolean accept(File f) {
            if (f.isDirectory())
                return true;
            
            String lcasename = f.getName().toLowerCase();
            return lcasename.endsWith(".jar") || lcasename.endsWith(".zip");
        }
        @Override
        public String getDescription() {
            return "Archive files (*.jar, *.zip)";
        }
    };

    /** Creates new form DeployInputJars */
    public DeployInputJars(DeployLobby lobby, AppConfig config) {
        super(lobby, "Input Sources", true);
        this.lobby = lobby;
        this.config = config;
        
        initComponents();
        updateInputSources();
        setLocationRelativeTo(lobby);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sclJars = new javax.swing.JScrollPane();
        lstJars = new javax.swing.JList();
        btnAddJar = new javax.swing.JButton();
        btnAddFolder = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnPrev = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Input Jars");

        lstJars.setModel(listModel);
        sclJars.setViewportView(lstJars);

        btnAddJar.setText("Add Jar/Zip");
        btnAddJar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddJarActionPerformed(evt);
            }
        });

        btnAddFolder.setText("Add Folder");
        btnAddFolder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddFolderActionPerformed(evt);
            }
        });

        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        btnNext.setText("Next >");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnPrev.setText("< Prev");
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, sclJars, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 365, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(btnPrev)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btnNext))
                    .add(layout.createSequentialGroup()
                        .add(btnRemove)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btnAddFolder)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btnAddJar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(sclJars, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnAddJar)
                    .add(btnAddFolder)
                    .add(btnRemove))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnNext)
                    .add(btnPrev))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void updateInputSources(){
        File[] sources = config.getInputSources();
        for (File src : sources){
            listModel.addElement(src);
        }
    }

    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        config.save();
        dispose();

        DeployAppInfo info = new DeployAppInfo(lobby, config);
        info.setVisible(true);
    }//GEN-LAST:event_btnPrevActionPerformed

    private void btnAddJarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddJarActionPerformed
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        chooser.setDialogTitle("Add Jar/Zip");
        chooser.setMultiSelectionEnabled(true);
        chooser.addChoosableFileFilter(jarZipFilter);
        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION){
            File[] chosenFiles = chooser.getSelectedFiles();
            for (File chosenFile : chosenFiles){
                File absFile = chosenFile.getAbsoluteFile();
                if (absFile.isFile() && !listModel.contains(absFile)){
                    listModel.addElement(absFile);
                }
            }
        }
    }//GEN-LAST:event_btnAddJarActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
         for (Object selected : lstJars.getSelectedValues()){
             listModel.removeElement(selected);
         }
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnAddFolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddFolderActionPerformed
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.setDialogTitle("Add Folder");
        chooser.setMultiSelectionEnabled(true);
        chooser.removeChoosableFileFilter(jarZipFilter);
        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION){
            File[] chosenFiles = chooser.getSelectedFiles();
            for (File chosenFile : chosenFiles){
                File absFile = chosenFile.getAbsoluteFile();
                if (absFile.isDirectory() && !listModel.contains(absFile)){
                    listModel.addElement(absFile);
                }
            }
        }
    }//GEN-LAST:event_btnAddFolderActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        File[] sources = new File[listModel.getSize()];
        for (int i = 0; i < sources.length; i++){
            sources[i] = (File) listModel.get(i);
        }
        config.setInputSources(sources);
        config.save();
        lobby.updateAppList();
        
        DeployOutput output = new DeployOutput(lobby, config);
        dispose();
        output.setVisible(true);
    }//GEN-LAST:event_btnNextActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddFolder;
    private javax.swing.JButton btnAddJar;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrev;
    private javax.swing.JButton btnRemove;
    private javax.swing.JList lstJars;
    private javax.swing.JScrollPane sclJars;
    // End of variables declaration//GEN-END:variables

}
